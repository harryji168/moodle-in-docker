{"version":3,"file":"chartjs-lazy.min.js","sources":["../src/chartjs-lazy.js"],"sourcesContent":["/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\n\n/**\n * Description of import into Moodle:\n *\n * - Download Chartjs source code (zip) file from https://github.com/chartjs/Chart.js/releases/latest.\n * - You must build Chart.js to generate the dist files (https://www.chartjs.org/docs/latest/developers/contributing.html#building-and-testing).\n *   Chart.js will generate a new file dist/chart.umd.js with minified format, in order to avoid the minification\n *   we need to modify rollup.config.js, find below code in the file:\n *   ```\n *   1. // UMD build\n *   2. // dist/chart.umd.js\n *   3. {\n *   4.     input: 'src/index.umd.ts',\n *   5.     plugins: plugins(true),\n *   6.     output: {\n *   7.       ...\n *   8.     },\n *   9. },\n *   ```\n *\n *   Change line 5 into:\n *   ```\n *   plugins: plugins(),\n *   ```\n *\n *   Save the file and run build script again.\n *\n * - Copy /dist/chart.umd.js content to lib/amd/src/chartjs-lazy.js.\n * - Remove below line in the lib/amd/src/chartjs-lazy.js:\n *   ```\n *   //# sourceMappingURL=chart.umd.js.map\n *   ```\n * - Convert line endings to LF-Unix format.\n * - Change the version number and the copyright year at the file header block.\n * - Keep these instructions in the file.\n * - Visit lib/tests/other/chartjstestpage.php to see if the library still works after the update.\n *\n */\n\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nget Colors () { return plugin_colors; },\nget Decimation () { return plugin_decimation; },\nget Filler () { return index; },\nget Legend () { return plugin_legend; },\nget SubTitle () { return plugin_subtitle; },\nget Title () { return plugin_title; },\nget Tooltip () { return plugin_tooltip; }\n});\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\n/*!\n * @kurkle/color v0.3.0\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$2 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map$2);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$2[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate$1(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\nisPatternOrGradient: isPatternOrGradient,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone$1,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\n_splitKey: _splitKey,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\ndrawPointLegend: drawPointLegend,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\n_scaleRangesChanged: _scaleRangesChanged,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nalmostEquals: almostEquals,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar _adapters = {\n    _date: DateAdapterBase\n};\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {\n    ...helpers\n};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n    window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));"],"names":["global","factory","this","plugins","Object","freeze","__proto__","Colors","plugin_colors","Decimation","plugin_decimation","Filler","index","Legend","plugin_legend","SubTitle","plugin_subtitle","Title","plugin_title","Tooltip","plugin_tooltip","noop","uid","id","isNullOrUndef","value","isArray","Array","type","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","map$2","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","interpolate$1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","resolve","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","easingEffects","_deprecated","fontString","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","super","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","LineController","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref8","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref9","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","exports","module","define","amd","globalThis","self"],"mappings":"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"}